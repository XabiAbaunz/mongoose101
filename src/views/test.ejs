<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Test Ikasleak API</title>
    <script>
        async function fetchIkasleak() {
            const response = await fetch('/api/ikasleak');
            const data = await response.json();
            document.getElementById('ikasleak').innerText = JSON.stringify(data, null, 2);
            loadEmails();
        }

        async function createIkasle() {
            const izena = document.getElementById('izena').value;
            const adina = document.getElementById('adina').value;
            const email = document.getElementById('email').value;

            const response = await fetch('/api/ikasleak', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ izena, adina, email })
            });

            const data = await response.json();
            document.getElementById('newIkasle').innerText = JSON.stringify(data, null, 2);
            loadEmails();
        }

        async function deleteIkasle() {
            const id = document.getElementById("deleteId").value;

            const response = await fetch(`/api/ikasleak/${id}`, {
            method: "DELETE",
            });

            const data = await response.json();
            document.getElementById("deletedIkasle").innerText = JSON.stringify(
            data,
            null,
            2
            );
            loadEmails();
        }

        async function loadEmails() {
            const response = await fetch('/api/ikasleak');
            const data = await response.json();

            const comboBox = document.getElementById('emailSelect');
            comboBox.innerHTML = '<option value="" disabled selected>Choose an ikasle</option>';

            data.forEach(ikasle => {
                let option = document.createElement('option');
                option.text = ikasle.email;
                option.value = ikasle.email;
                comboBox.appendChild(option);
            });
        }

        async function editIkasle() {
            const emailZaharra = document.getElementById('emailSelect').value;
            const izena = document.getElementById('izena2').value;
            const adina = document.getElementById('adina2').value;
            const emailBerria = document.getElementById('email2').value;

            if (!emailZaharra) {
                alert("Editatzeko ikasle bat aukeratu.");
                return;
            }

            const body = {};
            if (izena) body.izena = izena;
            if (adina) body.adina = adina;
            if (emailBerria) body.emailBerria = emailBerria;

            const response = await fetch(`/api/ikasleak/${emailZaharra}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(body)
            });

            if (response.ok) {
                const data = await response.json();
                document.getElementById('editedIkasle').innerText = JSON.stringify(data, null, 2);
                loadEmails(); 
            } else {
                const error = await response.json();
                alert(`Error updating ikasle: ${error.message}`);
            }
        }
        async function createTalde() {
            const taldeIzena = document.getElementById('taldeIzena').value;

            const response = await fetch('/api/taldeak', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ taldeIzena })
            });

            const data = await response.json();
            document.getElementById('newTalde').innerText = JSON.stringify(data, null, 2);
        }
    </script>
</head>
<body onload="loadEmails()">
    <h1>Test Ikasleak API</h1>
    <button onclick="fetchIkasleak()">Get Ikasleak</button>
    <pre id="ikasleak"></pre>

    <h2>Create Ikasle</h2>
    <form onsubmit="event.preventDefault(); createIkasle();">
        <label for="izena">Izena:</label>
        <input type="text" id="izena" name="izena" required>
        <br>
        <label for="adina">Adina:</label>
        <input type="number" id="adina" name="adina" required>
        <br>
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required>
        <br>
        <button type="submit">Create</button>
    </form>
    <pre id="newIkasle"></pre>
    <h2>Delete Ikasle</h2>
    <form onsubmit="event.preventDefault(); deleteIkasle();">
        <label for="id">Id:</label>
        <input type="text" id="deleteId" name="deleteId" required>
        <br>
        <button type="submit">Delete</button>
    </form>
    <pre id="deletedIkasle"></pre>
    <h2>Edit Ikasle</h2>
    <form onsubmit="event.preventDefault(); editIkasle();">
        <label for="emailSelect">Ikasle Email:</label>
        <select id="emailSelect" name="emailSelect" required>
            <option value="" disabled selected>Choose an ikasle</option>
        </select>
        <br>
        <label for="izena">Izena:</label>
        <input type="text" id="izena2" name="izena" required>
        <br>
        <label for="adina">Adina:</label>
        <input type="number" id="adina2" name="adina" required>
        <br>
        <label for="email">Email:</label>
        <input type="email" id="email2" name="email" required>
        <br>
        <button type="submit">Edit</button>
    </form>
    <pre id="editedIkasle"></pre>
    <h2>Create Talde</h2>
    <form onsubmit="event.preventDefault(); createTalde();">
        <label for="taldeIzena">Izena:</label>
        <input type="text" id="taldeIzena" name="Talde Izena" required>
        <br>
        <button type="submit">Create</button>
    </form>
    <pre id="newTalde"></pre>
</body>
</html>